/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CreateEventImport } from './routes/create-event'
import { Route as IndexImport } from './routes/index'
import { Route as EventsIndexImport } from './routes/events/index'
import { Route as EventsEventIdImport } from './routes/events/$eventId'
import { Route as EventsEventIdTicketImport } from './routes/events/_.$eventId.ticket'
import { Route as EventsEventIdInviteImport } from './routes/events/_.$eventId.invite'
import { Route as EventsEventIdEditImport } from './routes/events/_.$eventId.edit'

// Create/Update Routes

const CreateEventRoute = CreateEventImport.update({
  path: '/create-event',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EventsIndexRoute = EventsIndexImport.update({
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdRoute = EventsEventIdImport.update({
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdTicketRoute = EventsEventIdTicketImport.update({
  path: '/events/$eventId/ticket',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdInviteRoute = EventsEventIdInviteImport.update({
  path: '/events/$eventId/invite',
  getParentRoute: () => rootRoute,
} as any)

const EventsEventIdEditRoute = EventsEventIdEditImport.update({
  path: '/events/$eventId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/create-event': {
      id: '/create-event'
      path: '/create-event'
      fullPath: '/create-event'
      preLoaderRoute: typeof CreateEventImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/events//$eventId/edit': {
      id: '/events//$eventId/edit'
      path: '/events/$eventId/edit'
      fullPath: '/events/$eventId/edit'
      preLoaderRoute: typeof EventsEventIdEditImport
      parentRoute: typeof rootRoute
    }
    '/events//$eventId/invite': {
      id: '/events//$eventId/invite'
      path: '/events/$eventId/invite'
      fullPath: '/events/$eventId/invite'
      preLoaderRoute: typeof EventsEventIdInviteImport
      parentRoute: typeof rootRoute
    }
    '/events//$eventId/ticket': {
      id: '/events//$eventId/ticket'
      path: '/events/$eventId/ticket'
      fullPath: '/events/$eventId/ticket'
      preLoaderRoute: typeof EventsEventIdTicketImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/create-event': typeof CreateEventRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events': typeof EventsIndexRoute
  '/events/$eventId/edit': typeof EventsEventIdEditRoute
  '/events/$eventId/invite': typeof EventsEventIdInviteRoute
  '/events/$eventId/ticket': typeof EventsEventIdTicketRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/create-event': typeof CreateEventRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events': typeof EventsIndexRoute
  '/events/$eventId/edit': typeof EventsEventIdEditRoute
  '/events/$eventId/invite': typeof EventsEventIdInviteRoute
  '/events/$eventId/ticket': typeof EventsEventIdTicketRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/create-event': typeof CreateEventRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/': typeof EventsIndexRoute
  '/events//$eventId/edit': typeof EventsEventIdEditRoute
  '/events//$eventId/invite': typeof EventsEventIdInviteRoute
  '/events//$eventId/ticket': typeof EventsEventIdTicketRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/create-event'
    | '/events/$eventId'
    | '/events'
    | '/events/$eventId/edit'
    | '/events/$eventId/invite'
    | '/events/$eventId/ticket'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/create-event'
    | '/events/$eventId'
    | '/events'
    | '/events/$eventId/edit'
    | '/events/$eventId/invite'
    | '/events/$eventId/ticket'
  id:
    | '__root__'
    | '/'
    | '/create-event'
    | '/events/$eventId'
    | '/events/'
    | '/events//$eventId/edit'
    | '/events//$eventId/invite'
    | '/events//$eventId/ticket'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CreateEventRoute: typeof CreateEventRoute
  EventsEventIdRoute: typeof EventsEventIdRoute
  EventsIndexRoute: typeof EventsIndexRoute
  EventsEventIdEditRoute: typeof EventsEventIdEditRoute
  EventsEventIdInviteRoute: typeof EventsEventIdInviteRoute
  EventsEventIdTicketRoute: typeof EventsEventIdTicketRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CreateEventRoute: CreateEventRoute,
  EventsEventIdRoute: EventsEventIdRoute,
  EventsIndexRoute: EventsIndexRoute,
  EventsEventIdEditRoute: EventsEventIdEditRoute,
  EventsEventIdInviteRoute: EventsEventIdInviteRoute,
  EventsEventIdTicketRoute: EventsEventIdTicketRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-event",
        "/events/$eventId",
        "/events/",
        "/events//$eventId/edit",
        "/events//$eventId/invite",
        "/events//$eventId/ticket"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/create-event": {
      "filePath": "create-event.tsx"
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx"
    },
    "/events/": {
      "filePath": "events/index.tsx"
    },
    "/events//$eventId/edit": {
      "filePath": "events/_.$eventId.edit.tsx"
    },
    "/events//$eventId/invite": {
      "filePath": "events/_.$eventId.invite.tsx"
    },
    "/events//$eventId/ticket": {
      "filePath": "events/_.$eventId.ticket.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
